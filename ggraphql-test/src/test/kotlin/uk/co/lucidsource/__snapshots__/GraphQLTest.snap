uk.co.lucidsource.GraphQLTest.testMutation[mutation]=[
ExecutionResultImpl{errors=[], data={persistCandidate={id=99, firstname=new, lastname=new}}, dataPresent=true, extensions=null}
]


uk.co.lucidsource.GraphQLTest.testMutation[query]=[
ExecutionResultImpl{errors=[], data={candidates={nodes=[{id=1, firstname=John, lastname=Doe}, {id=2, firstname=Jane, lastname=Doe}, {id=99, firstname=new, lastname=new}], total=3, pageNumber=1}}, dataPresent=true, extensions=null}
]


uk.co.lucidsource.GraphQLTest.testNonNullArgumentWithNonNull[query]=[
ExecutionResultImpl{errors=[], data={testNonNullArgument=worked}, dataPresent=true, extensions=null}
]


uk.co.lucidsource.GraphQLTest.testNonNullArgumentWithNull[query]=[
ExecutionResultImpl{errors=[ValidationError{validationErrorType=MissingFieldArgument, queryPath=[testNonNullArgument], message=Validation error (MissingFieldArgument@[testNonNullArgument]) : Missing field argument 'input', locations=[SourceLocation{line=1, column=3}], description='Validation error (MissingFieldArgument@[testNonNullArgument]) : Missing field argument 'input'', extensions=[]}, ValidationError{validationErrorType=MissingFieldArgument, queryPath=[testNonNullArgument], message=Validation error (MissingFieldArgument@[testNonNullArgument]) : Missing field argument 'int', locations=[SourceLocation{line=1, column=3}], description='Validation error (MissingFieldArgument@[testNonNullArgument]) : Missing field argument 'int'', extensions=[]}], data=null, dataPresent=false, extensions=null}
]


uk.co.lucidsource.GraphQLTest.testNullArgumentWithNull[query]=[
ExecutionResultImpl{errors=[], data={testNullArgument=worked}, dataPresent=true, extensions=null}
]


uk.co.lucidsource.GraphQLTest.testQueryPaginatedResults=[
ExecutionResultImpl{errors=[], data={candidates={nodes=[{id=1, firstname=John, lastname=Doe}, {id=2, firstname=Jane, lastname=Doe}], total=2, pageNumber=1}}, dataPresent=true, extensions=null}
]


uk.co.lucidsource.GraphQLTest.testQueryUnionResults=[
ExecutionResultImpl{errors=[], data={candidate={audits={nextCursor=SimpleToken(token=sdsd), nodes=[{changes=[{leftValues=[], property=tags, rightValues=[]}, {left=john, right=doe, property=firstname}]}]}}}, dataPresent=true, extensions=null}
]